# -*- coding: utf-8 -*-


# Все задачи текущего блока решите с помощью генераторов списков!

# Задание-1:
# Дан список, заполненный произвольными целыми числами.
# Получить новый список, элементы которого будут
# квадратами элементов исходного списка
# [1, 2, 4, 0] --> [1, 4, 16, 0]
print('---------------------Задача №1 (easy)----------------------')

list_a = [2, 78, 6, 8, 9, 12 , 45, 923]

list_b = [a**2 for a in list_a]
print(list_b)

# Задание-2:
# Даны два списка фруктов.
# Получить список фруктов, присутствующих в обоих исходных списках.
print('---------------------Задача №2 (easy)----------------------')

fruts_1 = ['банан', 'апельсин', 'абрикос', 'киви', 'гранат']
fruts_2 = ['арбуз', 'яблоко', 'дыня', 'виноград', 'гранат', 'банан', 'киви']

fruts_common = [frut for frut in fruts_1 if frut in fruts_2]
print(fruts_common)


# Задание-3:
# Дан список, заполненный произвольными числами.
# Получить список из элементов исходного, удовлетворяющих следующим условиям:
# + Элемент кратен 3
# + Элемент положительный
# + Элемент не кратен 4
print('---------------------Задача №3 (easy)----------------------')

list_a = [-2, -16, 9, 24, 11, 81, 256, 111, 22]

list_result = [ a for a in list_a if a>0 and a%4!= 0 and a%3 == 0]
print(list_result)

# Задача - 1
# Запросите у пользователя имя, фамилию, email. Теперь необходимо совершить проверки, имя и фамилия должны иметь заглавные первые буквы.
# email - не должен иметь заглавных букв и должен быть в формате: текст в нижнем регистре, допускается нижнее подчеркивание и цифры, потом @, потом текст, допускаются цифры, точка, ru или org или com.
# Например:
# Пупкин василий - неверно указано имя, te$T@test.net - неверно указан email (спецсимвол, заглавная буква, .net), te_4_st@test.com - верно указан.
print('---------------------Задача №1 (normal)----------------------')
import re

# name = input('Имя?') #Делал для латинского алфавита: >>> Sergey
# surname = input('Фамилия?') # >>> Novozhilov
# mail = input('e-mail?') # >>> Делал для правильного имейля с буквами в нижнем регистре английского алфавита типа torick_01@mail.ru
#
# pattern_name = '^[A-Z][a-z]+$'
# pattern_mail = '^[a-z0-9-_]+@[a-z0-9]+\.(ru|org|com)$'
#
# def test_name (pattern_name, name):
#     if re.search(pattern_name, name):
#         return re.search(pattern_name, name)
#     else:
#         return 'Не верно указан(о): {}'.format(name)
#
# print(test_name(pattern_name, name))
# print(test_name(pattern_name, surname))
# print(test_name(pattern_mail, mail))

print('---------------------Задача №2 (normal)----------------------')

some_str = '''
Мороз и солнце; день чудесный!
Еще ты дремлешь, друг прелестный —
Пора, красавица, проснись:
Открой сомкнуты негой взоры
Навстречу северной Авроры,
Звездою севера явись!
Вечор, ты помнишь, вьюга злилась,
На мутном небе мгла носилась;
Луна, как бледное пятно,
Сквозь тучи мрачные желтела,
И ты печальная сидела —
А нынче... погляди в окно:
Под голубыми небесами
Великолепными коврами,
Блестя на солнце, снег лежит;
Прозрачный лес один чернеет,
И ель сквозь иней зеленеет,
И речка подо льдом блестит.
Вся комната янтарным блеском
Озарена. Веселым треском
Трещит затопленная печь.
Приятно думать у лежанки.
Но знаешь: не велеть ли в санки
Кобылку бурую запречь?
Скользя по утреннему снегу,
Друг милый, предадимся бегу
Нетерпеливого коня
И навестим поля пустые,
Леса, недавно столь густые,
И берег, милый для меня.'''

pattern_dot ='([\.][\.])'
pattern_dot_before = '[а-я]{4,6}[\.][\.]' #чтобы при выводе захватить побольше кусок текста, для более удобного поиска
if re.findall(pattern_dot, some_str):
    print('В тексте есть более двух точек подряд', re.findall(pattern_dot_before, some_str))
else:
    print('В тексте нет многоточек')
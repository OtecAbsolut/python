# -*- coding: utf-8 -*-


# Задача-1:
# Дан список фруктов.
# Напишите программу, выводящую фрукты в виде нумерованного списка,
# выровненного по правой стороне.

# Пример:
# Дано: ["яблоко", "банан", "киви", "арбуз"]
# Вывод:
# 1. яблоко
# 2.  банан
# 3.   киви
# 4.  арбуз
# Подсказка: воспользоваться методом .format()
print('-----------------------ЗАДАЧА №1 (easy)----------------------------')

fruts = ['яблоко', 'гранат', 'клубника', 'мандарин', 'дыня']

for index, frut in enumerate(fruts, start=1):
    index=str(index)
    print((index+'.'), '{:>10}'.format(frut))


# Задача-2:
# Даны два произвольные списка.
# Удалите из первого списка элементы, присутствующие во втором списке.
print('-----------------------ЗАДАЧА №2 (easy)----------------------------')

'''
Если нет повторящихся элементов то можно перегнать список в множество
'''
a_list = [0,1,2,'вася',4,5,6,7,8,9]
b_list = ['вася',7,9]
a_list = set(a_list)
b_list = set(b_list)
print(a_list-b_list)

'''
Если повторяющиеся элементы есть то так..
'''
a_list = [0,1,2,'вася',4,5,6,6,7,8,9]
b_list = [1,'вася',7,9,6]

for b in b_list:
    for index, a in enumerate(a_list):
        if b == a:
            print('Удален:', a_list.pop(index))
print(a_list)

# Задача-3:
# Дан произвольный список из целых чисел.
# Получите НОВЫЙ список из элементов исходного, выполнив следующие условия:
# если элемент кратен двум, то разделить его на 4, если не кратен, то умножить на два.
print('-----------------------ЗАДАЧА №3 (easy)----------------------------')

a_list = [1,2,3,4,5,6,7,8,9]
b_list = []
for a in a_list:
    a = int(a)
    if a%2 == 0:
        b_list.append(a/4)
    else:
        b_list.append(a*2)
print(b_list)

# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.
# equation = 'y = -12x + 11111140.2121'
# x = 2.5
# вычислите и выведите y
print('-----------------------ЗАДАЧА №1 (normal)----------------------------')

equation = 'y = -12x + 11111140.2121'
x = 2.5
y = 0
number =''
stack =[]
right_part =''
for index, symbol in enumerate(equation):
    if symbol == '=':
        right_part = equation[(index+1):]
        break

right_part = right_part.replace(' ','')

for symbol in right_part:
    if symbol in '-+1234567890.':
        number += symbol
    elif number:
        stack.append(float(number))
        number =''
        if symbol == 'x':
            stack[-1] = x*stack[-1]
if number:
    stack.append(float(number))

for number in stack:
    y = y + number

print('y = ', y)

# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
# date = '01.11.1985'
# Примеры некорректных дат
# date = '01.22.1001'
# date = '1.12.1001'
# date = '-2.10.3001'

print('-----------------------ЗАДАЧА №2 (normal)----------------------------')

answer = ''
while answer != 'n':
    answer = input('Приступим y/n: ')
    if answer == 'y':
        date = input('Введите дату в формате dd.mm.yyyy:')
        if len(date) == 10:
            dd, mm, yyyy = date.split('.')
            if len(dd)==2 and len(mm)==2 and len(yyyy)==4:
                if dd.isdigit() and mm.isdigit() and yyyy.isdigit():
                    if (1<= int(dd) <=31) and (1<= int(mm) <=12) and (1<= int(yyyy) <=9999):
                      if dd == '31' and (mm in ['01', '03', '05', '07', '08', '10', '12']):
                          print('Дата: ', date)
                      elif int(dd)< 31:
                          print('Дата: ', date)
                      else:
                        print('Неверно указали день')
                        continue

                    else:
                        print('Неверно указали день')
                        continue
                else:
                    print('Вы ввели в неправильном формате: ')
                    continue
            else:
                print('Вы ввели в неправильном формате: ')
                continue
        elif len(date)<10:
            print('Вы ввели мало цифр')
        elif len(date)>10:
            print('Вы ввели слишком много цифр')
print('Пока')


# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты,
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
# Вход: 11
# Выход: 5 3
print('-----------------------ЗАДАЧА №3 (normal) про башню--------------------------')

answer = ''

while answer != 'n':
    answer = input('Приступим y/n: ')
    if answer == 'y':
        index2 = 0
        n = 0
        floor = []
        room_floor = []
        room = int(input('Введит номер команты: '))
        if 1 <= room <= 2000000000:
            while n <= room:
                room_floor.append(n * n)
                room_floor[n] = room_floor[n] + room_floor[n - 1]
                floor.append(n)
                floor[n] = floor[n] + floor[n - 1]
                if room_floor[n] >= room:
                    index2 = room - (int((room - room_floor[n - 1]) / (floor[n] - floor[n - 1])) * (
                                floor[n] - floor[n - 1]) + room_floor[n - 1])
                    if index2 > 0:
                        index = floor[n - 1] + int((room - room_floor[n - 1]) / (floor[n] - floor[n - 1])) + 1
                    else:
                        index = floor[n - 1] + int((room - room_floor[n - 1]) / (floor[n] - floor[n - 1]))
                    break
                n += 1
            print('Этаж: ', index, 'Подъезд: ', index2, 'Команта: ', room)
        else:
            print('Вы ввели не верный номер')
            continue

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]
print('-----------------------ЗАДАЧА №1 (hard) --------------------------')

list_1 =[2, -5, 9, 25, 36, 31, 0]
list_2 =[]
for result in list_1:
    if result >0:
        result = result ** .5
        if result%1 ==0:
            result = int(result)
            list_2.append(result)
print(list_2)


# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)
print('-----------------------ЗАДАЧА №2 (hard) --------------------------')

month = [0,'января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']
day = [0, 'первое', 'второе', 'третье', 'четвертое', 'пятое', 'шестое', 'седьмое', 'восьмое', 'девятое', 'десятое', 'одинадцатое', 'двенадцатое', 'тренадцатое', 'четырнадцатое', 'пятнадцатое', 'шестнадцатое', 'семнадцатое', 'восемнадцатое', 'девятнадцатое', 'двадцатое', 'двадцать первое', 'двадцать второе', 'двадцать третье', 'двадцать четвертое', 'двадцать пятое', 'двадцать шестое', 'двадцать седьмое', 'двадцать восьмое', 'двадцать девятое', 'тридцатое', 'тридцать первое']

date = input('Введите дату в формате dd.mm.yyyy:')
dd, mm, yyyy = date.split('.')
dd = int(dd)
mm = int(mm)
print(day[dd], month[mm], yyyy, 'года.')

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random


# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут:
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]


